<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://cuihantao.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://cuihantao.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-10-31T00:59:14+00:00</updated><id>https://cuihantao.github.io/feed.xml</id><title type="html">blank</title><subtitle>Hantao Cui&apos;s website. </subtitle><entry><title type="html">Teaching with Microsoft Teams</title><link href="https://cuihantao.github.io/blog/2021/teams-teaching/" rel="alternate" type="text/html" title="Teaching with Microsoft Teams"/><published>2021-08-25T15:40:16+00:00</published><updated>2021-08-25T15:40:16+00:00</updated><id>https://cuihantao.github.io/blog/2021/teams-teaching</id><content type="html" xml:base="https://cuihantao.github.io/blog/2021/teams-teaching/"><![CDATA[<p>This article demonstrates a streamlined workflow for lecturing, handwriting, recording, and uploading. You can save time setting up online lectures, uploading videos, and sending out links.</p> <p>Microsoft Teams is chosen because of its tight integration with OneDrive.</p> <p>This article assumes the reader is unfamiliar with Teams or OneDrive and thus come with some details.</p> <h2 id="tldr">TL;DR</h2> <p>I use a Teams meeting room for teaching using a Surface Pro. Signing into the same room on the classroom PC allows projecting slides and handwriting. Teams automatically uploads the video recordings to OneDrive, where you can create a dedicated, shared folder and post it on Canvas.</p> <h2 id="setting-up-microsoft-teams-meetings">Setting up Microsoft Teams meetings</h2> <p>First, let’s set up a recurring Teams meeting and <em>invite all students</em>.</p> <p>Open Microsoft Teams and log in with your instution account. On the left panel, click on “Calendar” and click on “New meeting” near the top right to schedule a new meeting. The interface looks like below.</p> <p><img src="/assets/img/2021-08-23-teams-teaching/teams-new-meeting.png" width="800"/></p> <p>The steps are:</p> <ul> <li>Fill in the title, date and time for the first coming meeting.</li> <li>Add all students to the required attendee field using their instution email address.</li> <li>Set the meeting as recurring to end on the last day of the semester.</li> </ul> <p>Save the meeting to continue.</p> <h2 id="setting-up-a-shared-folder-for-recordings">Setting up a shared folder for recordings</h2> <p>Next, we will ask Teams to create a folder for recording. Back to the “Calendar” screen of Teams and locate the newly added meeting.</p> <ul> <li>Click on it and click on “Join”. A meeting window will pop up.</li> <li>Click on the “…” to the left of the camera icon and click on “Start Recording”.</li> <li>After a few seconds, click on the arrow on the left of the hang up button and select “End meeting”.</li> </ul> <p>Back to Teams and click on “Chat”, a new meeting with the meeting name will show up. You can pin it from the right-click menu.</p> <p>Access your <a href="https://www.microsoft.com/en-us/microsoft-365?ms.url=officecom&amp;shorturl=onedrive&amp;rtc=1">Microsoft OneDrive Webapp</a> with the same instution account. A folder named <em>Recordings</em> will appear with the just-recorded video. Feel free to remove this test video. Next:</p> <ul> <li>Create a folder in the “Recording” folder (or elsewhere you prefer in this OneDrive). My folder is called “ECEN 5113 Fall 2021”.</li> <li>Right click on the new folder and select <em>Share</em>.</li> <li>In the new window, click on <em>People you specify can view &gt;</em> and change it to <em>People in [Your organization] with the link</em>.</li> <li>Click on <em>Apply</em> and select <em>Copy link</em> (see screenshot below). A unique link will be created for sharing on Canvas.</li> </ul> <p><img src="/assets/img/2021-08-23-teams-teaching/onedrive-share.png" width="800"/></p> <h2 id="sharing-the-link-on-canvas">Sharing the link on Canvas</h2> <p>Now, let’s put it on Canvas.</p> <ul> <li>Created a module called <em>Streaming and Recording</em> and pinned it to the top.</li> <li>Click on the “+” sign on the right of the module title bar to add an <em>External URL</em>.</li> <li>Fill in a title (<em>Lecture Recording</em>, for example) and paste the copied sharing link.</li> <li>If you want to live stream lectures, add another <em>External URL</em> and provide the meeting link, which can be found in the Teams Calendar (see the screenshot below).</li> <li>Next, publish the module item when ready. Use the <em>Student View</em> to double check.</li> </ul> <p>At the beginning of the semester, I sent out an email informing students that lecture recordings will be available at the same link on Canvas, following lectures.</p> <p><img src="/assets/img/2021-08-23-teams-teaching/teams-meeting-link.png" width="800"/></p> <p>In addition, I created a folder for slides with ink notes and share it with all students. The final Canvas module looks like below:</p> <p><img src="/assets/img/2021-08-23-teams-teaching/canvas-link.png" width="800"/></p> <h2 id="classroom-workflow">Classroom workflow</h2> <p>Since my classroom already has a PC connected to the projector, I typically bring a stylus-enabled device for showing slides and writing notes. The PowerPoint slides have blank pages inserted wherever I feel like writing.</p> <p>My typical workflow is as follows:</p> <ul> <li>Log in my account on the classroom PC, open up Teams and join the meeting without connecting to audio.</li> <li>Start Teams on my Surface Pro. Connect to the same meeting with audio and video enabled.</li> <li>Start screen sharing.</li> </ul> <p>When the class starts, <strong>remember to start recording</strong>. When finished, end the meeting and log out of the classroom PC.</p> <h2 id="after-class">After class</h2> <p>Above are the one-time setup steps. The after-class steps are extremely simple:</p> <ol> <li>Drag the new video recording in the OneDrive <em>Recordings</em> folder to the shared folder.</li> <li>Save the slides with ink notes and drag it to the other OneDrive shared folder.</li> </ol> <h2 id="final-notes">Final Notes</h2> <p>It is important to add all students to the required attendees. This allows the video recording to be automatically shared to them. If a student cannot see a particular recording, it indicates s/he was not an attendee when it was recorded. In such case, the video file needs to be shared separately.</p>]]></content><author><name></name></author><summary type="html"><![CDATA[A workflow that automates lecturing, handwriting, recording, and uploading.]]></summary></entry><entry><title type="html">Tutorial - Running andes in a Docker container</title><link href="https://cuihantao.github.io/blog/2020/andes-docker/" rel="alternate" type="text/html" title="Tutorial - Running andes in a Docker container"/><published>2020-03-25T16:40:16+00:00</published><updated>2020-03-25T16:40:16+00:00</updated><id>https://cuihantao.github.io/blog/2020/andes-docker</id><content type="html" xml:base="https://cuihantao.github.io/blog/2020/andes-docker/"><![CDATA[<h2 id="introduction">Introduction</h2> <p>Docker container saves the efforts for setting up Python and installing dependent packages. A Docker container of andes is available if you prefer to use it in a container without installation.</p> <p>There are excellent tutorial on the internet for getting started with Docker. For example, checkout the Docker installation guide at <a href="https://docs.docker.com/install/">https://docs.docker.com/install/</a>.</p> <p>Please continue reading after installing Docker.</p> <h2 id="getting-the-docker-image">Getting the Docker Image</h2> <p>To pull the Docker image from DockerHub, run</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker pull cuihantao/andes:latest
</code></pre></div></div> <h2 id="mounting-folders">Mounting Folders</h2> <p>When you run andes inside a docker, it is executed inside a container. Andes in the container only has access to files within the container.</p> <p>To run andes for a file in the local file system, one needs to mount the folder containing the file to the container. Mounting is done with <code class="language-plaintext highlighter-rouge">-v</code> or <code class="language-plaintext highlighter-rouge">--volume</code>, followed by the source directory and destination directory followed by colon. The destination directory must be <code class="language-plaintext highlighter-rouge">/andes</code> for andes containers.</p> <p>For the source folder, It is recommended to create a folder specifically for andes test cases. For example, my folder is at <code class="language-plaintext highlighter-rouge">/Users/hcui7/notebooks</code> (this location is specific to your system and user name).</p> <p>Next, copy andes test cases into the folder. In the example, I’m using <code class="language-plaintext highlighter-rouge">kundur_full.xlsx</code>.</p> <h2 id="running-andes">Running ANDES</h2> <p>To run andes using docker, run</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker run <span class="nt">-v</span> /Users/hcui7/notebooks:/andes cuihantao/andes run kundur_full.xlsx
</code></pre></div></div> <p>where <code class="language-plaintext highlighter-rouge">-v /Users/hcui7/notebooks:/andes</code> does the folder mounting, <code class="language-plaintext highlighter-rouge">cuihantao/andes</code> is the image name, and <code class="language-plaintext highlighter-rouge">run kundur_full.xlsx</code> is the command and argument passed to <code class="language-plaintext highlighter-rouge">andes</code> within the container.</p> <p>As is seen in the example, commands and arguments are passed to the container in the same way as to a local andes. For example, to enable verbose logging, run</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker run <span class="nt">-v</span> /Users/hcui7/notebooks:/andes cuihantao/andes <span class="nt">-v</span> 10 run kundur_full.xlsx
</code></pre></div></div> <p>The output files will be written to the source folder in your local machine. In my example, outputs are saved to <code class="language-plaintext highlighter-rouge">/Users/hcui7/notebooks</code>.</p> <h2 id="prepare-and-config">Prepare and Config</h2> <p>The latest Andes docker image contains pre-generated numerical calls stored in <code class="language-plaintext highlighter-rouge">/home/cui/.andes/calls.pkl</code>. One does not need to wait for code generation.</p> <p>To use a custom Config file, place the <code class="language-plaintext highlighter-rouge">andes.rc</code> in the folder that you are mounting. To check which config file is being used, turn on debugging messages with <code class="language-plaintext highlighter-rouge">andes -v 10</code>.</p> <h2 id="make-an-alias---the-easiest-way">Make an alias - the easiest way</h2> <p>One might want to use a shorter command to run Andes from docker. The solution in Bash (or zsh, or others) is to create an alias command.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">alias </span><span class="nv">andesd</span><span class="o">=</span><span class="s1">'docker run -v `pwd`:/andes cuihantao/andes:latest'</span>
</code></pre></div></div> <p>Run the above command to create an alias called <code class="language-plaintext highlighter-rouge">andesd</code> that automatically mounts the current folder. One can add this command to the shell profile (<code class="language-plaintext highlighter-rouge">~/.bashrc</code> or others) to create the alias automatically upon login.</p> <p>Once completed, using Andes from docker is as simple as that from the host - simply replace <code class="language-plaintext highlighter-rouge">andes</code> with <code class="language-plaintext highlighter-rouge">andesd</code>:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>andesd run kundur_full.xlsx
</code></pre></div></div> <p>where <code class="language-plaintext highlighter-rouge">kundur_full.xlsx</code> should exist in the current host folder. Note that Andes will search for the <code class="language-plaintext highlighter-rouge">andes.rc</code> config file in the sequence of 1) current folder, and 2) the default one in the container at <code class="language-plaintext highlighter-rouge">/home/cui/.andes/andes.rc</code>.</p>]]></content><author><name></name></author><summary type="html"><![CDATA[Docker lets you run andes without installation. Here's a few notes on folder mounting.]]></summary></entry></feed>